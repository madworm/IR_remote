/*
 * data is in extended NEC format ( http://www.sbprojects.com/knowledge/ir/nec.php )
 *
 * start: (9.0ms, 4.5ms)
 * logic 0: (560µs, 560µs)
 * logic 1: (560µs, 1690µs)
 * address low byte
 * address high byte
 * command byte
 * logically inverted command byte
 * "something" <-- my remote seems to mess this up quite often (sends a very short pulse intead of 4000 something), so I don't check the last pulses
 * repeat-code
 *
 */

#define MAXPULSE 65000U
#define MINPULSE 5U
#define REPEAT_CODE_PAUSE 250	// this has to be signed !
#define NUMPULSES 72U
#define FUZZINESS 20U

#define NUMBER_OF_IR_CODES 21	// does not include the repeat-code, which I don't consider as a "full" code.

const uint16_t PROGMEM IRsignals[21][72] = {
	{
	 882, 438,		// start

	 54, 56,		// address low-byte
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,
	 54, 56,

	 54, 164,		// address high-byte
	 52, 166,		//
	 54, 166,		// if this were the 'standard' NEC format
	 52, 166,		// this byte would be the logical inverse
	 52, 166,		// of the address low-byte
	 56, 164,		//
	 54, 54,		// obviously this is not the case ;-)
	 54, 166,		//

	 52, 56,		// command byte
	 54, 56,
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,

	 54, 164,		// command byte inverted
	 56, 164,
	 52, 166,
	 52, 166,
	 56, 164,
	 54, 164,
	 52, 166,
	 56, 164,

	 54, 4002,		// "stuff"

	 878, 218,		// repeat code
	 54, 0},

	{
	 882, 440,
	 52, 58,
	 50, 60,
	 50, 56,
	 54, 56,
	 52, 58,
	 50, 58,
	 54, 56,
	 50, 60,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 58,
	 52, 168,
	 50, 168,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 56,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 168,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 168,
	 50, 168,
	 54, 166,
	 52, 4006,
	 874, 224,
	 48, 0},

	{
	 882, 440,
	 52, 58,
	 50, 60,
	 50, 56,
	 54, 56,
	 52, 58,
	 52, 56,
	 52, 58,
	 50, 60,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 58,
	 52, 168,
	 50, 58,
	 52, 168,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 56,
	 54, 56,
	 50, 60,
	 50, 168,
	 50, 60,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 168,
	 50, 168,
	 54, 166,
	 52, 4004,
	 876, 222,
	 50, 0},

	{
	 880, 440,
	 54, 56,
	 50, 60,
	 50, 56,
	 54, 58,
	 50, 58,
	 52, 56,
	 54, 56,
	 50, 60,
	 50, 168,
	 50, 168,
	 54, 166,
	 52, 166,
	 50, 168,
	 54, 166,
	 52, 56,
	 54, 166,
	 52, 56,
	 54, 56,
	 50, 168,
	 52, 58,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 58,
	 52, 166,
	 52, 166,
	 54, 56,
	 50, 168,
	 54, 166,
	 52, 166,
	 52, 166,
	 54, 166,
	 52, 4004,
	 876, 222,
	 50, 0},

	{
	 880, 440,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 56,
	 52, 60,
	 50, 56,
	 54, 56,
	 52, 58,
	 52, 166,
	 52, 166,
	 54, 168,
	 50, 168,
	 50, 166,
	 54, 168,
	 50, 56,
	 54, 168,
	 50, 168,
	 50, 58,
	 52, 166,
	 52, 58,
	 52, 56,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 168,
	 52, 58,
	 50, 166,
	 54, 168,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 4004,
	 878, 220,
	 50, 0},

	{
	 882, 438,
	 56, 54,
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,
	 54, 56,
	 52, 166,
	 52, 166,
	 56, 164,
	 52, 166,
	 52, 166,
	 56, 164,
	 54, 54,
	 56, 164,
	 54, 54,
	 54, 166,
	 52, 166,
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 164,
	 54, 54,
	 56, 54,
	 52, 166,
	 56, 164,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 4002,
	 878, 220,
	 52, 0},

	{
	 882, 436,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 164,
	 54, 164,
	 56, 166,
	 52, 164,
	 54, 164,
	 56, 166,
	 52, 54,
	 56, 166,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 164,
	 54, 56,
	 54, 54,
	 56, 54,
	 52, 58,
	 52, 166,
	 52, 166,
	 56, 164,
	 54, 52,
	 58, 164,
	 54, 164,
	 52, 166,
	 56, 164,
	 54, 4002,
	 878, 218,
	 54, 0},

	{
	 882, 440,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 56,
	 54, 56,
	 50, 60,
	 50, 168,
	 50, 168,
	 54, 166,
	 50, 168,
	 50, 168,
	 54, 166,
	 52, 56,
	 54, 166,
	 52, 166,
	 50, 60,
	 50, 58,
	 52, 168,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 56,
	 54, 56,
	 52, 166,
	 54, 168,
	 50, 56,
	 54, 166,
	 52, 166,
	 52, 166,
	 54, 168,
	 50, 4004,
	 878, 220,
	 50, 0},

	{
	 812, 436,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 54,
	 56, 164,
	 54, 54,
	 56, 164,
	 54, 54,
	 56, 164,
	 54, 54,
	 56, 54,
	 52, 58,
	 52, 54,
	 56, 166,
	 54, 52,
	 58, 164,
	 52, 54,
	 56, 166,
	 52, 164,
	 54, 164,
	 56, 166,
	 52, 4002,
	 880, 218,
	 54, 0},

	{
	 880, 438,
	 56, 54,
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,
	 52, 58,
	 52, 166,
	 52, 166,
	 54, 166,
	 52, 166,
	 52, 166,
	 56, 164,
	 54, 54,
	 54, 166,
	 52, 56,
	 54, 56,
	 52, 164,
	 56, 166,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 164,
	 54, 164,
	 54, 56,
	 54, 54,
	 56, 164,
	 54, 164,
	 52, 166,
	 56, 164,
	 54, 4002,
	 878, 218,
	 54, 0},

	{
	 882, 438,
	 54, 56,
	 52, 58,
	 52, 56,
	 54, 56,
	 52, 58,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 166,
	 52, 166,
	 54, 168,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 56,
	 54, 168,
	 50, 168,
	 50, 60,
	 50, 168,
	 50, 168,
	 52, 58,
	 50, 60,
	 50, 56,
	 54, 56,
	 52, 58,
	 52, 166,
	 52, 58,
	 50, 58,
	 52, 168,
	 50, 168,
	 50, 168,
	 54, 166,
	 52, 4004,
	 876, 222,
	 50, 0},

	{
	 882, 436,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,
	 52, 56,
	 54, 54,
	 56, 54,
	 54, 56,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 54,
	 56, 164,
	 54, 54,
	 56, 164,
	 54, 164,
	 54, 164,
	 56, 54,
	 52, 58,
	 52, 56,
	 54, 56,
	 52, 164,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 164,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 4002,
	 878, 220,
	 54, 0},

	{
	 880, 438,
	 56, 54,
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,
	 54, 56,
	 52, 166,
	 52, 166,
	 56, 164,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 54,
	 56, 164,
	 54, 54,
	 56, 54,
	 52, 56,
	 54, 54,
	 56, 164,
	 54, 54,
	 56, 54,
	 54, 56,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 164,
	 54, 56,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 0},

	{
	 882, 436,
	 56, 54,
	 54, 56,
	 54, 54,
	 56, 54,
	 52, 58,
	 52, 54,
	 56, 54,
	 54, 56,
	 54, 164,
	 54, 164,
	 56, 164,
	 54, 166,
	 52, 164,
	 56, 166,
	 52, 54,
	 56, 166,
	 52, 164,
	 54, 58,
	 52, 54,
	 56, 54,
	 54, 164,
	 56, 54,
	 54, 56,
	 54, 54,
	 54, 56,
	 52, 166,
	 54, 166,
	 52, 166,
	 52, 58,
	 52, 164,
	 54, 164,
	 56, 166,
	 52, 4002,
	 880, 220,
	 52, 0},

	{
	 882, 438,
	 54, 56,
	 52, 58,
	 52, 56,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 58,
	 52, 166,
	 52, 166,
	 54, 168,
	 50, 168,
	 50, 168,
	 52, 166,
	 52, 56,
	 54, 166,
	 52, 56,
	 54, 166,
	 52, 56,
	 54, 56,
	 50, 168,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 168,
	 50, 58,
	 52, 168,
	 50, 168,
	 50, 60,
	 50, 166,
	 52, 168,
	 52, 168,
	 50, 4006,
	 876, 220,
	 50, 0},

	{
	 882, 442,
	 50, 58,
	 50, 60,
	 50, 56,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 168,
	 50, 168,
	 52, 170,
	 48, 60,
	 50, 168,
	 50, 58,
	 52, 58,
	 50, 168,
	 52, 58,
	 50, 166,
	 54, 56,
	 52, 58,
	 52, 56,
	 54, 168,
	 50, 166,
	 50, 60,
	 52, 166,
	 52, 58,
	 50, 168,
	 52, 166,
	 54, 166,
	 50, 4006,
	 876, 222,
	 50, 0},

	{
	 880, 440,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 58,
	 52, 56,
	 54, 56,
	 52, 58,
	 52, 166,
	 50, 168,
	 54, 166,
	 52, 166,
	 52, 166,
	 54, 168,
	 50, 56,
	 54, 168,
	 50, 166,
	 52, 58,
	 52, 166,
	 52, 58,
	 52, 166,
	 52, 58,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 168,
	 50, 58,
	 52, 168,
	 50, 58,
	 52, 168,
	 50, 168,
	 52, 168,
	 50, 4004,
	 878, 220,
	 50, 0},

	{
	 882, 438,
	 54, 56,
	 52, 58,
	 52, 56,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 166,
	 52, 166,
	 54, 168,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 56,
	 54, 168,
	 50, 56,
	 54, 168,
	 50, 168,
	 50, 60,
	 50, 168,
	 50, 58,
	 52, 56,
	 54, 56,
	 50, 168,
	 54, 56,
	 50, 60,
	 50, 168,
	 50, 60,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 4006,
	 876, 220,
	 50, 0},

	{
	 882, 438,
	 54, 56,
	 52, 58,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 58,
	 52, 60,
	 48, 58,
	 52, 170,
	 48, 170,
	 50, 168,
	 50, 168,
	 50, 166,
	 54, 166,
	 52, 56,
	 54, 166,
	 52, 56,
	 54, 56,
	 50, 60,
	 50, 168,
	 50, 168,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 168,
	 50, 168,
	 50, 168,
	 52, 58,
	 50, 60,
	 50, 168,
	 50, 166,
	 54, 168,
	 50, 4006,
	 876, 224,
	 46, 0},

	{
	 882, 438,
	 54, 56,
	 52, 58,
	 52, 56,
	 54, 56,
	 50, 60,
	 50, 58,
	 52, 58,
	 50, 60,
	 50, 166,
	 52, 166,
	 54, 168,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 56,
	 54, 168,
	 50, 168,
	 50, 60,
	 50, 56,
	 54, 168,
	 50, 166,
	 52, 58,
	 52, 56,
	 54, 56,
	 50, 60,
	 50, 168,
	 50, 168,
	 52, 58,
	 50, 60,
	 50, 168,
	 50, 168,
	 52, 168,
	 50, 4006,
	 876, 224,
	 46, 0},

	{
	 880, 442,
	 50, 60,
	 50, 56,
	 54, 56,
	 52, 58,
	 52, 56,
	 54, 58,
	 48, 60,
	 50, 58,
	 52, 170,
	 48, 168,
	 50, 168,
	 52, 168,
	 50, 168,
	 50, 168,
	 52, 58,
	 50, 168,
	 52, 56,
	 52, 168,
	 52, 56,
	 52, 168,
	 52, 168,
	 50, 56,
	 54, 60,
	 48, 58,
	 52, 166,
	 52, 60,
	 50, 166,
	 50, 60,
	 50, 58,
	 52, 168,
	 50, 168,
	 50, 168,
	 54, 4004,
	 874, 226,
	 48, 0}
};

typedef enum {			// the elements 0 to 20 are in the SAME order as the array elements of IRsignals !
	VOL_DOWN,
	PLAY_PAUSE,
	VOL_UP,
	SETUP_KEY,
	ARROW_UP,
	STOP_MODE,
	ARROW_LEFT,
	ENTER_SAVE,
	ARROW_RIGHT,
	DIGIT_0_OR_10,
	ARROW_DOWN,
	ARROW_REPEAT,
	DIGIT_1,
	DIGIT_2,
	DIGIT_3,
	DIGIT_4,
	DIGIT_5,
	DIGIT_6,
	DIGIT_7,
	DIGIT_8,
	DIGIT_9,
	REPEAT_CODE = 66,
	MISMATCH = 77,		// only returned if something goes terribly wrong
	NOT_SURE_YET = 99,	// this should NEVER be returned as a result 
} IR_code_t;
